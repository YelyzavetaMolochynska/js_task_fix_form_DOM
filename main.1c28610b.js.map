{"version":3,"sources":["scripts/main.js"],"names":["nameFormat","word","result","slice","toUpperCase","i","length","toLowerCase","inputs","document","querySelectorAll","forEach","input","label","createElement","className","htmlFor","id","textContent","name","before","placeholder"],"mappings":";AAAA,aAkBA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhBA,SAASA,EAAWC,GAGb,IAFDC,IAAAA,EAASD,EAAKE,MAAM,EAAG,GAAGC,cAErBC,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,IAC1BJ,EAAKI,KAAOJ,EAAKI,GAAGE,cACvBL,GAAU,IAAMD,EAAKI,GAAGE,cAExBL,GAAUD,EAAKI,GAIZH,OAAAA,EAGT,IAAMM,EAASC,SAASC,iBAAiB,SAEzC,EAAIF,GAAQG,QAAQ,SAAAC,GACZC,IAAAA,EAAQJ,SAASK,cAAc,SAErCD,EAAME,UAAY,CAAC,eACnBF,EAAMG,QAAUJ,EAAMK,GACtBJ,EAAMK,YAAclB,EAAWY,EAAMO,MAAMf,cAC3CQ,EAAMQ,OAAOP,GAEbD,EAAMS,YAAcrB,EAAWY,EAAMO","file":"main.1c28610b.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction nameFormat(word) {\n  let result = word.slice(0, 1).toUpperCase();\n\n  for (let i = 1; i < word.length; i++) {\n    if ((word[i] !== word[i].toLowerCase())) {\n      result += ' ' + word[i].toLowerCase();\n    } else {\n      result += word[i];\n    }\n  }\n\n  return result;\n}\n\nconst inputs = document.querySelectorAll('input');\n\n[...inputs].forEach(input => {\n  const label = document.createElement('label');\n\n  label.className = ['field-label'];\n  label.htmlFor = input.id;\n  label.textContent = nameFormat(input.name).toUpperCase();\n  input.before(label);\n\n  input.placeholder = nameFormat(input.name);\n});\n"]}